// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: challenger.proto

package de.tum.i13.bandency;

/**
 * Protobuf type {@code Challenger.ResultQ2}
 */
public  final class ResultQ2 extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Challenger.ResultQ2)
    ResultQ2OrBuilder {
private static final long serialVersionUID = 0L;
  // Use ResultQ2.newBuilder() to construct.
  private ResultQ2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResultQ2() {
    histogram_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ResultQ2();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ResultQ2(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            benchmarkId_ = input.readInt64();
            break;
          }
          case 16: {

            batchSeqId_ = input.readInt64();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              histogram_ = new java.util.ArrayList<de.tum.i13.bandency.TopKStreaks>();
              mutable_bitField0_ |= 0x00000001;
            }
            histogram_.add(
                input.readMessage(de.tum.i13.bandency.TopKStreaks.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        histogram_ = java.util.Collections.unmodifiableList(histogram_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return de.tum.i13.bandency.ChallengerProto.internal_static_Challenger_ResultQ2_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return de.tum.i13.bandency.ChallengerProto.internal_static_Challenger_ResultQ2_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            de.tum.i13.bandency.ResultQ2.class, de.tum.i13.bandency.ResultQ2.Builder.class);
  }

  public static final int BENCHMARK_ID_FIELD_NUMBER = 1;
  private long benchmarkId_;
  /**
   * <code>int64 benchmark_id = 1;</code>
   * @return The benchmarkId.
   */
  public long getBenchmarkId() {
    return benchmarkId_;
  }

  public static final int BATCH_SEQ_ID_FIELD_NUMBER = 2;
  private long batchSeqId_;
  /**
   * <code>int64 batch_seq_id = 2;</code>
   * @return The batchSeqId.
   */
  public long getBatchSeqId() {
    return batchSeqId_;
  }

  public static final int HISTOGRAM_FIELD_NUMBER = 3;
  private java.util.List<de.tum.i13.bandency.TopKStreaks> histogram_;
  /**
   * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
   */
  public java.util.List<de.tum.i13.bandency.TopKStreaks> getHistogramList() {
    return histogram_;
  }
  /**
   * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
   */
  public java.util.List<? extends de.tum.i13.bandency.TopKStreaksOrBuilder> 
      getHistogramOrBuilderList() {
    return histogram_;
  }
  /**
   * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
   */
  public int getHistogramCount() {
    return histogram_.size();
  }
  /**
   * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
   */
  public de.tum.i13.bandency.TopKStreaks getHistogram(int index) {
    return histogram_.get(index);
  }
  /**
   * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
   */
  public de.tum.i13.bandency.TopKStreaksOrBuilder getHistogramOrBuilder(
      int index) {
    return histogram_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (benchmarkId_ != 0L) {
      output.writeInt64(1, benchmarkId_);
    }
    if (batchSeqId_ != 0L) {
      output.writeInt64(2, batchSeqId_);
    }
    for (int i = 0; i < histogram_.size(); i++) {
      output.writeMessage(3, histogram_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (benchmarkId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, benchmarkId_);
    }
    if (batchSeqId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, batchSeqId_);
    }
    for (int i = 0; i < histogram_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, histogram_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof de.tum.i13.bandency.ResultQ2)) {
      return super.equals(obj);
    }
    de.tum.i13.bandency.ResultQ2 other = (de.tum.i13.bandency.ResultQ2) obj;

    if (getBenchmarkId()
        != other.getBenchmarkId()) return false;
    if (getBatchSeqId()
        != other.getBatchSeqId()) return false;
    if (!getHistogramList()
        .equals(other.getHistogramList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BENCHMARK_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBenchmarkId());
    hash = (37 * hash) + BATCH_SEQ_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBatchSeqId());
    if (getHistogramCount() > 0) {
      hash = (37 * hash) + HISTOGRAM_FIELD_NUMBER;
      hash = (53 * hash) + getHistogramList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static de.tum.i13.bandency.ResultQ2 parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static de.tum.i13.bandency.ResultQ2 parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static de.tum.i13.bandency.ResultQ2 parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(de.tum.i13.bandency.ResultQ2 prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Challenger.ResultQ2}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Challenger.ResultQ2)
      de.tum.i13.bandency.ResultQ2OrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.tum.i13.bandency.ChallengerProto.internal_static_Challenger_ResultQ2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.tum.i13.bandency.ChallengerProto.internal_static_Challenger_ResultQ2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.tum.i13.bandency.ResultQ2.class, de.tum.i13.bandency.ResultQ2.Builder.class);
    }

    // Construct using de.tum.i13.bandency.ResultQ2.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getHistogramFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      benchmarkId_ = 0L;

      batchSeqId_ = 0L;

      if (histogramBuilder_ == null) {
        histogram_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        histogramBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return de.tum.i13.bandency.ChallengerProto.internal_static_Challenger_ResultQ2_descriptor;
    }

    @java.lang.Override
    public de.tum.i13.bandency.ResultQ2 getDefaultInstanceForType() {
      return de.tum.i13.bandency.ResultQ2.getDefaultInstance();
    }

    @java.lang.Override
    public de.tum.i13.bandency.ResultQ2 build() {
      de.tum.i13.bandency.ResultQ2 result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public de.tum.i13.bandency.ResultQ2 buildPartial() {
      de.tum.i13.bandency.ResultQ2 result = new de.tum.i13.bandency.ResultQ2(this);
      int from_bitField0_ = bitField0_;
      result.benchmarkId_ = benchmarkId_;
      result.batchSeqId_ = batchSeqId_;
      if (histogramBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          histogram_ = java.util.Collections.unmodifiableList(histogram_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.histogram_ = histogram_;
      } else {
        result.histogram_ = histogramBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof de.tum.i13.bandency.ResultQ2) {
        return mergeFrom((de.tum.i13.bandency.ResultQ2)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(de.tum.i13.bandency.ResultQ2 other) {
      if (other == de.tum.i13.bandency.ResultQ2.getDefaultInstance()) return this;
      if (other.getBenchmarkId() != 0L) {
        setBenchmarkId(other.getBenchmarkId());
      }
      if (other.getBatchSeqId() != 0L) {
        setBatchSeqId(other.getBatchSeqId());
      }
      if (histogramBuilder_ == null) {
        if (!other.histogram_.isEmpty()) {
          if (histogram_.isEmpty()) {
            histogram_ = other.histogram_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHistogramIsMutable();
            histogram_.addAll(other.histogram_);
          }
          onChanged();
        }
      } else {
        if (!other.histogram_.isEmpty()) {
          if (histogramBuilder_.isEmpty()) {
            histogramBuilder_.dispose();
            histogramBuilder_ = null;
            histogram_ = other.histogram_;
            bitField0_ = (bitField0_ & ~0x00000001);
            histogramBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHistogramFieldBuilder() : null;
          } else {
            histogramBuilder_.addAllMessages(other.histogram_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      de.tum.i13.bandency.ResultQ2 parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (de.tum.i13.bandency.ResultQ2) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long benchmarkId_ ;
    /**
     * <code>int64 benchmark_id = 1;</code>
     * @return The benchmarkId.
     */
    public long getBenchmarkId() {
      return benchmarkId_;
    }
    /**
     * <code>int64 benchmark_id = 1;</code>
     * @param value The benchmarkId to set.
     * @return This builder for chaining.
     */
    public Builder setBenchmarkId(long value) {
      
      benchmarkId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 benchmark_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBenchmarkId() {
      
      benchmarkId_ = 0L;
      onChanged();
      return this;
    }

    private long batchSeqId_ ;
    /**
     * <code>int64 batch_seq_id = 2;</code>
     * @return The batchSeqId.
     */
    public long getBatchSeqId() {
      return batchSeqId_;
    }
    /**
     * <code>int64 batch_seq_id = 2;</code>
     * @param value The batchSeqId to set.
     * @return This builder for chaining.
     */
    public Builder setBatchSeqId(long value) {
      
      batchSeqId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 batch_seq_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBatchSeqId() {
      
      batchSeqId_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<de.tum.i13.bandency.TopKStreaks> histogram_ =
      java.util.Collections.emptyList();
    private void ensureHistogramIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        histogram_ = new java.util.ArrayList<de.tum.i13.bandency.TopKStreaks>(histogram_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        de.tum.i13.bandency.TopKStreaks, de.tum.i13.bandency.TopKStreaks.Builder, de.tum.i13.bandency.TopKStreaksOrBuilder> histogramBuilder_;

    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public java.util.List<de.tum.i13.bandency.TopKStreaks> getHistogramList() {
      if (histogramBuilder_ == null) {
        return java.util.Collections.unmodifiableList(histogram_);
      } else {
        return histogramBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public int getHistogramCount() {
      if (histogramBuilder_ == null) {
        return histogram_.size();
      } else {
        return histogramBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public de.tum.i13.bandency.TopKStreaks getHistogram(int index) {
      if (histogramBuilder_ == null) {
        return histogram_.get(index);
      } else {
        return histogramBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder setHistogram(
        int index, de.tum.i13.bandency.TopKStreaks value) {
      if (histogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistogramIsMutable();
        histogram_.set(index, value);
        onChanged();
      } else {
        histogramBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder setHistogram(
        int index, de.tum.i13.bandency.TopKStreaks.Builder builderForValue) {
      if (histogramBuilder_ == null) {
        ensureHistogramIsMutable();
        histogram_.set(index, builderForValue.build());
        onChanged();
      } else {
        histogramBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder addHistogram(de.tum.i13.bandency.TopKStreaks value) {
      if (histogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistogramIsMutable();
        histogram_.add(value);
        onChanged();
      } else {
        histogramBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder addHistogram(
        int index, de.tum.i13.bandency.TopKStreaks value) {
      if (histogramBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistogramIsMutable();
        histogram_.add(index, value);
        onChanged();
      } else {
        histogramBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder addHistogram(
        de.tum.i13.bandency.TopKStreaks.Builder builderForValue) {
      if (histogramBuilder_ == null) {
        ensureHistogramIsMutable();
        histogram_.add(builderForValue.build());
        onChanged();
      } else {
        histogramBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder addHistogram(
        int index, de.tum.i13.bandency.TopKStreaks.Builder builderForValue) {
      if (histogramBuilder_ == null) {
        ensureHistogramIsMutable();
        histogram_.add(index, builderForValue.build());
        onChanged();
      } else {
        histogramBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder addAllHistogram(
        java.lang.Iterable<? extends de.tum.i13.bandency.TopKStreaks> values) {
      if (histogramBuilder_ == null) {
        ensureHistogramIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, histogram_);
        onChanged();
      } else {
        histogramBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder clearHistogram() {
      if (histogramBuilder_ == null) {
        histogram_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        histogramBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public Builder removeHistogram(int index) {
      if (histogramBuilder_ == null) {
        ensureHistogramIsMutable();
        histogram_.remove(index);
        onChanged();
      } else {
        histogramBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public de.tum.i13.bandency.TopKStreaks.Builder getHistogramBuilder(
        int index) {
      return getHistogramFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public de.tum.i13.bandency.TopKStreaksOrBuilder getHistogramOrBuilder(
        int index) {
      if (histogramBuilder_ == null) {
        return histogram_.get(index);  } else {
        return histogramBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public java.util.List<? extends de.tum.i13.bandency.TopKStreaksOrBuilder> 
         getHistogramOrBuilderList() {
      if (histogramBuilder_ != null) {
        return histogramBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(histogram_);
      }
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public de.tum.i13.bandency.TopKStreaks.Builder addHistogramBuilder() {
      return getHistogramFieldBuilder().addBuilder(
          de.tum.i13.bandency.TopKStreaks.getDefaultInstance());
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public de.tum.i13.bandency.TopKStreaks.Builder addHistogramBuilder(
        int index) {
      return getHistogramFieldBuilder().addBuilder(
          index, de.tum.i13.bandency.TopKStreaks.getDefaultInstance());
    }
    /**
     * <code>repeated .Challenger.TopKStreaks histogram = 3;</code>
     */
    public java.util.List<de.tum.i13.bandency.TopKStreaks.Builder> 
         getHistogramBuilderList() {
      return getHistogramFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        de.tum.i13.bandency.TopKStreaks, de.tum.i13.bandency.TopKStreaks.Builder, de.tum.i13.bandency.TopKStreaksOrBuilder> 
        getHistogramFieldBuilder() {
      if (histogramBuilder_ == null) {
        histogramBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            de.tum.i13.bandency.TopKStreaks, de.tum.i13.bandency.TopKStreaks.Builder, de.tum.i13.bandency.TopKStreaksOrBuilder>(
                histogram_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        histogram_ = null;
      }
      return histogramBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Challenger.ResultQ2)
  }

  // @@protoc_insertion_point(class_scope:Challenger.ResultQ2)
  private static final de.tum.i13.bandency.ResultQ2 DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new de.tum.i13.bandency.ResultQ2();
  }

  public static de.tum.i13.bandency.ResultQ2 getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResultQ2>
      PARSER = new com.google.protobuf.AbstractParser<ResultQ2>() {
    @java.lang.Override
    public ResultQ2 parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ResultQ2(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResultQ2> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResultQ2> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public de.tum.i13.bandency.ResultQ2 getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

